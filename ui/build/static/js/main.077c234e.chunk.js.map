{"version":3,"sources":["serviceWorker.js","components/graphql.js","components/logIn.js","components/register.js","components/frontpage.js","components/page.js","components/delete.js","components/logOut.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","REGISTER_USER","gql","LOGIN_USER","LOGOUT_USER","DELETE_USER","LogIn","inputref0","React","createRef","inputref1","inputLogIn","name","String","password","useMutation","logInUser","data","error","loading","console","Cookies","set","href","alert","onSubmit","e","current","value","variables","type","ref","placeholder","Register","inputref2","inputref3","inputRegister","country","email","registerUser","Frontpage","className","to","Component","withRouter","logOutUser","cookie","remove","useLogOut","deleteUser","useDelete","get","onClick","token","Delete","LogOut","props","App","exact","path","component","Page","client","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.077c234e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {gql} from \"apollo-boost\"\nconst REGISTER_USER=gql`\nmutation Register($type:inputRegister!)\n{\nregisterUser(type:$type)\n}\n`;\nconst LOGIN_USER=gql`\nmutation LogIn ($type:inputLogIn!)\n{\n logInUser(type:$type)\n}\n`\nconst LOGOUT_USER=gql`\nmutation LogOut($token:String)\n{\nlogOutUser(token:$token)\n}\n`\nconst DELETE_USER=gql`\nmutation Delete($token:String)\n{\ndeleteUser(token:$token)\n}\n`\nexport {\n    REGISTER_USER,\n    LOGIN_USER,\n    DELETE_USER,\n    LOGOUT_USER\n};","import React, {Component} from 'react'\nimport {LOGIN_USER} from \"./graphql\"\nimport Cookies from \"universal-cookie/lib\";\nimport {useMutation} from '@apollo/react-hooks'\n/**\n * @return {boolean}\n */\nfunction LogIn(){\n        const inputref0=React.createRef()\n        const inputref1=React.createRef()\n        let inputLogIn = {\n            name: String,\n            password: String\n        }\n        const [logInUser, { data, error,loading}] = useMutation(LOGIN_USER);\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n    if (error) {\n        console.error(error);\n        return <div>Error!</div>;\n    }\n    if(data){\n        if(data.logInUser!=\"verification error\") {\n            const cookie = new Cookies();\n            cookie.set(\"auth_token\", data.logInUser)\n            window.location.href=\"/PAGE\"\n        }\n        else{\n            alert(data.logInUser)\n        }\n    }\n        return (\n                    <div>\n                        <form\n                            onSubmit={e => {\n                                inputLogIn.name =inputref1.current.value\n                                inputLogIn.password =inputref0.current.value\n                                logInUser({variables: {type:inputLogIn}})}}>\n                            <input\n                               ref={inputref1}\n                               placeholder=\"Enter name\"\n                            />\n                            <input\n                                ref={inputref0}\n                                placeholder=\"Enter password\"\n                            />\n                            <button type=\"submit\">LOG IN</button>\n                        </form>\n                    </div>\n\n        )\n}\nexport default LogIn","import React, {Component} from 'react'\nimport {REGISTER_USER} from \"./graphql\"\nimport {useMutation} from '@apollo/react-hooks'\nimport Cookies from \"universal-cookie/lib\";\n/**\n * @return {boolean}\n */\nfunction Register(){\n        const inputref0=React.createRef()\n        const inputref1=React.createRef()\n        const inputref2=React.createRef()\n        const inputref3=React.createRef()\n        let inputRegister={\n            name:String,\n            country:String,\n            email:String,\n            password:String,\n        }\n        const [registerUser,{data,loading,error}]=useMutation(REGISTER_USER)\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n    if (error) {\n        console.error(error);\n        return <div>Error!</div>;\n    }\n    if(data){\n            const cookie = new Cookies();\n            cookie.set(\"auth_token\", data.registerUser)\n            window.location.href=\"/PAGE\"\n        }\n        return (\n                    <div>\n                        <form\n                            onSubmit={e => {\n                                inputRegister.name=inputref0.current.value\n                                inputRegister.country=inputref1.current.value\n                                inputRegister.email=inputref2.current.value\n                                inputRegister.password=inputref3.current.value\n                                registerUser({variables: {type:inputRegister}});\n                            }}\n                        >\n                            <input\n                                ref={inputref0}\n                                placeholder=\"Enter name\"\n                            />\n                            <input\n                                ref={inputref1}\n                                placeholder=\"Enter country\"\n                            />\n                            <input\n                                ref={inputref2}\n                                placeholder=\"Enter email\"\n                            />\n                            <input\n                                ref={inputref3}\n                                placeholder=\"Enter password\"\n                            />\n                            <button type=\"submit\">REGISTER </button>\n                        </form>\n                    </div>\n                )}\nexport default Register","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { withRouter } from 'react-router'\n\nclass Frontpage extends Component {\n    render() {\n        return (\n            <div className=\"flex pa1 justify-between nowrap orange\">\n                <div className=\"flex flex-fixed black\">\n                    <div className=\"fw7 mr1\">Proyect</div>\n                    <Link to=\"/REGISTER\" className=\"ml1 no-underline black\">\n                        REGISTER\n                    </Link>\n                    <div className=\"ml1\"></div>\n                    <Link to=\"/LOG_IN\" className=\"ml1 no-underline black\">\n                        LOG IN\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(Frontpage)","import React, {Component, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport {withRouter} from \"react-router\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {DELETE_USER, LOGOUT_USER} from \"./graphql\";\nimport Cookies from \"universal-cookie/lib\";\nfunction useLogOut() {\n    const cookie=new Cookies()\n    const [logOutUser, {loading, error, data}] = useMutation(LOGOUT_USER)\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n    if (error) {\n        console.error(error);\n        return <div>Error!</div>;\n    }\n    if (data) {\n        cookie.remove(\"auth_token\")\n        window.location.href = \"/\"\n    }\n    return logOutUser\n}\nfunction useDelete() {\n    const cookie=new Cookies()\n    const [deleteUser, {loading, error, data}] = useMutation(DELETE_USER)\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n    if (error) {\n        console.error(error);\n        return <div>Error!</div>;\n    }\n    if (data) {\n        if(data.deleteUser){\n            cookie.remove(\"auth_token\")\n            window.location.href = \"/\"\n        }\n    else\n        {\n            alert(\"Session Expired\")\n            cookie.remove(\"auth_token\")\n            window.location.href = \"/\"\n        }\n    }\n    return deleteUser\n}\nfunction Page (){\n      const logOutUser=useLogOut()\n      const deleteUser=useDelete()\n    const cookie=new Cookies()\n    if(cookie.get(\"auth_token\")==null)\n    {\n        alert(\"USER HAVE NOT REGISTERED OR LOGGED IN\")\n        return window.location.href=\"/\"\n    }\n        return (\n            <div className=\"flex pa1 justify-between nowrap orange\">\n                <div className=\"flex flex-fixed black\">\n                    <Link onClick={()=>{\n                        const token=cookie.get(\"auth_token\")\n                        logOutUser({variables:{token:token}})\n                    }} className=\"ml1 no-underline black\">\n                        LOG OUT\n                    </Link>\n                    <div className=\"ml1\"></div>\n                    <Link onClick={()=>{\n                        const token=cookie.get(\"auth_token\")\n                        deleteUser({variables:{token:token}})\n                    }}className=\"ml1 no-underline black\">\n                        DELETE\n                    </Link>\n                </div>\n            </div>\n        )\n}\nexport default withRouter(Page)","import React,{Component} from 'react'\nimport {DELETE_USER} from \"./graphql\";\nimport {useMutation} from \"@apollo/react-hooks\"\nimport Cookies from \"universal-cookie/lib\";\nfunction Delete (){\n    const inputDelete=React.createRef()\n        const [deleteUser,{loading,error,data}]=useMutation(DELETE_USER)\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n    if (error) {\n        console.error(error);\n        return <div>Error!</div>;\n    }\n    if(data){\n        window.location.href=\"/\"\n    }\n    return (\n                                <div>\n                        </div>\n\n            );\n}\nexport default Delete\n","import React,{Component} from 'react'\nimport {Mutation} from \"@apollo/react-components\";\nimport {LOGOUT_USER} from \"./graphql\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Frontpage from \"./frontpage\";\nimport Cookies from \"universal-cookie/lib\";\nclass LogOut extends Component{\n    constructor(props) {\n        super(props);\n        this.inputref0 = React.createRef()\n        this.inputref1 = React.createRef()\n    }\n\n    render() {\n        let inputLogIn = {\n            name: String,\n            password: String\n        }\n        return (\n            <div>\n\n            </div>\n                );\n    }\n}\nexport default LogOut","import React, {Component} from 'react';\nimport LogIn from \"./logIn\"\nimport Register from \"./register\"\nimport Frontpage from './frontpage'\nimport { Switch, Route,Redirect } from 'react-router-dom'\nimport Page from \"./page\";\nimport Delete from \"./delete\";\nimport LogOut from \"./logOut\";\nclass App extends Component{\n        render() {\n        return (\n            <div className=\"center w85\">\n                <div className=\"ph3 pv1 background-gray\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Frontpage}/>\n                        <Route exact path=\"/LOG_IN\" component={LogIn} />\n                        <Route exact path=\"/REGISTER\" component={Register} />\n                        <Route exact path=\"/PAGE\" component={Page} />\n                        <Route exact path=\"/DELETE\" component={Delete}/>\n                        <Route exact path=\"/LOG_OUT\" component={LogOut}/>\n                    </Switch>\n            </div>\n        </div>\n           )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./components/App\"\nimport {ApolloClient,HttpLink,InMemoryCache,ApolloLink } from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo';\nimport { BrowserRouter } from 'react-router-dom'\nimport {graphql} from \"graphql\";\nconst client = new ApolloClient({\n    link: new HttpLink({uri: \"http://localhost:4001/graphql\"}),\n    cache: new InMemoryCache()});\nReactDOM.render(\n        <BrowserRouter>\n            <ApolloProvider client={client}>\n                <App />\n            </ApolloProvider>\n        </BrowserRouter>,\n        document.getElementById('root')\n    )\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}